conda activate r
R
library(Seurat)
library(ggplot2)
library(stringr)
library(ggsci)
library(org.Hs.eg.db)
library(tidyverse)
library(showtext)
library(scales)
library(reshape2)
library(patchwork)
library(pheatmap)
library(DoubletFinder)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(cowplot)
library(REdaS)
library(qdapTools)
library(clusterProfiler)
library(RCurl)
library(stringr)
library(XML)
library(clustree)
library(enrichplot)
library(GOplot)
library(DOSE)
library(ggnewscale)
library(topGO)
library(circlize)
library(ComplexHeatmap)
library(msigdbr)
library(GSVA)
library(future)
library(ggrepel)
library(harmony)

font_add('Arial','/Library/Fonts/Arial.ttf')
showtext_auto()



options(Seurat.object.assay.version = "v3")
set.seed(12345)
dir <- ('/data/xinzangzhongxin/AF/')#depends
setwd(dir)
mycolor  <- readLines('./Colour.txt')

sce <- readRDS("./data_r/sce_harmony.RDS")
sce <- FindClusters(sce, resolution = 2)
celltype.markers <- c('GPAM', 'FASN', 'LEP', 'SLC19A3',
                   'NPPA', 'MYL7', 'MYL4', 'RYR2', 'TTN', 'CNNT2','MYBPC3', 'SCN5A',
                   'VWF', 'PECAM1', 'CDH5', 
                   'DCN', 'GSN', 'PDGFRA', 'COL4A4',
                   'CD45', 'CD8A', 'IL7R', 'CD40LG', 'CD247', 'CD4', 'CD3D', 'CD3E', 'CD40LG',
                   'GNLY', 'NKG7',
                   'TRDV2', 'TRGV9',
                   'SEL1L3', 'TPD52','CD19', 'CD79A', 'CD79B', 'MS4A1',
                   'CPA3', 'KIT', 'CST3',
                   'NRGN', 'CD226',
                   'MSLN', 'WT1', 'BNC1',
                   'RGS5', 'ABCC9', 'KCNJ8', 'EGFLAM',
                   'MYH11', 'TAGLN', 'ACTA2', 'FAT3',
                   'TBX1', 'PROX1', 
                   'NRG1', 'NRG3', 'PCDH15', 'LEPR', 'MYRIP',
                   'WWC1', 'PRG4', 'EPCAM', 'HAS1', 'TWIST2', 'KRT18', 'ITGB4',
                   'CD14', 'C1QA', 'CD68', 'CD163', 'SLC11A1',
                   'CD11C', 'HLA-DR',
                   'PLP1', 'NRXN1', 'NRXN3', 'XKR4',
                   'MKI67')
celltype.markers <- unique(celltype.markers)
sce_celltype_markers_dot <- DotPlot(sce, features = celltype.markers, assay='RNA'  )  + coord_flip()+
           scale_color_gradientn(colors= rev(brewer.pal(n = 11, name = "RdYlBu"))) +
           theme(plot.title = element_text( size = 16, face = "bold"),
                 panel.grid.major = element_line(colour = "grey90",size=0.2),
                 panel.grid.minor = element_blank(),
                 panel.background = element_blank(), axis.line = element_line(colour = "black"),
                 axis.text.x=element_text(color = 'black', size=12),
                 axis.text.y=element_text(color = 'black', size=12) ) 
sce_celltype_markers_dot
ggsave(plot=sce_celltype_markers_dot, filename="./data_r/Annotation_limit/sce_celltype_markers_dot.pdf",width = 15, height = 12)



metadata <- sce[[]]
metadata$cell_type = "NA"
metadata$cell_type[which(metadata$seurat_clusters == 0 )] = "Endo1"
metadata$cell_type[which(metadata$seurat_clusters == 1 )] = "Endo2"
metadata$cell_type[which(metadata$seurat_clusters == 2 )] = "Fib1"
metadata$cell_type[which(metadata$seurat_clusters == 3 )] = "Endo3"
metadata$cell_type[which(metadata$seurat_clusters == 4 )] = "Endo4"
metadata$cell_type[which(metadata$seurat_clusters == 5 )] = "Fib2"
metadata$cell_type[which(metadata$seurat_clusters == 6 )] = "Endo5"
metadata$cell_type[which(metadata$seurat_clusters == 7 )] = "Epic1"
metadata$cell_type[which(metadata$seurat_clusters == 8 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 9 )] = "Fib3"
metadata$cell_type[which(metadata$seurat_clusters == 10 )] = "Endo6"
metadata$cell_type[which(metadata$seurat_clusters == 11 )] = "Mac1"
metadata$cell_type[which(metadata$seurat_clusters == 12 )] = "EC1"
metadata$cell_type[which(metadata$seurat_clusters == 13 )] = "CM1"
metadata$cell_type[which(metadata$seurat_clusters == 14 )] = "CM2"
metadata$cell_type[which(metadata$seurat_clusters == 15 )] = "Epic2"
metadata$cell_type[which(metadata$seurat_clusters == 16 )] = "EC2"
metadata$cell_type[which(metadata$seurat_clusters == 17 )] = "Epic3"
metadata$cell_type[which(metadata$seurat_clusters == 18 )] = 'NotAssigned'
metadata$cell_type[which(metadata$seurat_clusters == 19 )] = "Mac2"
metadata$cell_type[which(metadata$seurat_clusters == 20 )] = "Mac3"
metadata$cell_type[which(metadata$seurat_clusters == 21 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 22 )] = "Adip"
metadata$cell_type[which(metadata$seurat_clusters == 23 )] = "CM3"
metadata$cell_type[which(metadata$seurat_clusters == 24 )] = "T_cell1"
metadata$cell_type[which(metadata$seurat_clusters == 25 )] = "T_cell2"
metadata$cell_type[which(metadata$seurat_clusters == 26 )] = "EC3"
metadata$cell_type[which(metadata$seurat_clusters == 27 )] = "Endo7"
metadata$cell_type[which(metadata$seurat_clusters == 28 )] = "Epic4" 
metadata$cell_type[which(metadata$seurat_clusters == 29 )] = "PC"
metadata$cell_type[which(metadata$seurat_clusters == 30 )] = "Lym_EC1"
metadata$cell_type[which(metadata$seurat_clusters == 31 )] = "SMC"
metadata$cell_type[which(metadata$seurat_clusters == 32 )] = "Endo8"
metadata$cell_type[which(metadata$seurat_clusters == 33 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 34 )] = "Fib4"
metadata$cell_type[which(metadata$seurat_clusters == 35 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 36 )] = "Epic5"
metadata$cell_type[which(metadata$seurat_clusters == 37 )] = "Epic6"
metadata$cell_type[which(metadata$seurat_clusters == 38 )] = "NC"
metadata$cell_type[which(metadata$seurat_clusters == 39 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 40 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 41 )] = "Endo9"
metadata$cell_type[which(metadata$seurat_clusters == 42 )] = "DC"
metadata$cell_type[which(metadata$seurat_clusters == 43 )] = "CM4"
metadata$cell_type[which(metadata$seurat_clusters == 44 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 45 )] = "Lym_EC2"
metadata$cell_type[which(metadata$seurat_clusters == 46 )] = "Epic7"
metadata$cell_type[which(metadata$seurat_clusters == 47 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 48 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 49 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 50 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 51 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 52 )] = "Fib5" 
metadata$cell_type[which(metadata$seurat_clusters == 53 )] = "NotAssigned" 
metadata$cell_subtype <- metadata$cell_type  
sce[[]] <- metadata
#DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "cell_subtype", pt.size = 0.1, raster=FALSE, label = TRUE)

metadata$cell_type[which(metadata$seurat_clusters == 0 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 1 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 2 )] = "Fibroblast"
metadata$cell_type[which(metadata$seurat_clusters == 3 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 4 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 5 )] = "Fibroblast"
metadata$cell_type[which(metadata$seurat_clusters == 6 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 7 )] = "Epicardial"
metadata$cell_type[which(metadata$seurat_clusters == 8 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 9 )] = "Fibroblast"
metadata$cell_type[which(metadata$seurat_clusters == 10 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 11 )] = "Macrophage"
metadata$cell_type[which(metadata$seurat_clusters == 12 )] = "Endothelial"
metadata$cell_type[which(metadata$seurat_clusters == 13 )] = "Cardiomyocyte"
metadata$cell_type[which(metadata$seurat_clusters == 14 )] = "Cardiomyocyte"
metadata$cell_type[which(metadata$seurat_clusters == 15 )] = "Epicardial"
metadata$cell_type[which(metadata$seurat_clusters == 16 )] = "Endothelial"
metadata$cell_type[which(metadata$seurat_clusters == 17 )] = "Epicardial"
metadata$cell_type[which(metadata$seurat_clusters == 18 )] = 'NotAssigned'
metadata$cell_type[which(metadata$seurat_clusters == 19 )] = "Macrophage"
metadata$cell_type[which(metadata$seurat_clusters == 20 )] = "Macrophage"
metadata$cell_type[which(metadata$seurat_clusters == 21 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 22 )] = "Adipocyte"
metadata$cell_type[which(metadata$seurat_clusters == 23 )] = "Cardiomyocyte"
metadata$cell_type[which(metadata$seurat_clusters == 24 )] = "T_cell"
metadata$cell_type[which(metadata$seurat_clusters == 25 )] = "T_cell"
metadata$cell_type[which(metadata$seurat_clusters == 26 )] = "Endothelial"
metadata$cell_type[which(metadata$seurat_clusters == 27 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 28 )] = "Epicardial" 
metadata$cell_type[which(metadata$seurat_clusters == 29 )] = "Pericyte"
metadata$cell_type[which(metadata$seurat_clusters == 30 )] = "Lym_EC"
metadata$cell_type[which(metadata$seurat_clusters == 31 )] = "SMC"
metadata$cell_type[which(metadata$seurat_clusters == 32 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 33 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 34 )] = "Fibroblast"
metadata$cell_type[which(metadata$seurat_clusters == 35 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 36 )] = "Epicardial"
metadata$cell_type[which(metadata$seurat_clusters == 37 )] = "Epicardial"
metadata$cell_type[which(metadata$seurat_clusters == 38 )] = "Neuronal"
metadata$cell_type[which(metadata$seurat_clusters == 39 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 40 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 41 )] = "Endocardial"
metadata$cell_type[which(metadata$seurat_clusters == 42 )] = "Dendritic_cell"
metadata$cell_type[which(metadata$seurat_clusters == 43 )] = "Cardiomyocyte"
metadata$cell_type[which(metadata$seurat_clusters == 44 )] = "NotAssigned"
metadata$cell_type[which(metadata$seurat_clusters == 45 )] = "Lym_EC"
metadata$cell_type[which(metadata$seurat_clusters == 46 )] = "Epicardial"
metadata$cell_type[which(metadata$seurat_clusters == 47 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 48 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 49 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 50 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 51 )] = "NotAssigned" 
metadata$cell_type[which(metadata$seurat_clusters == 52 )] = "Fibroblast" 
metadata$cell_type[which(metadata$seurat_clusters == 53 )] = "NotAssigned" 
sce[[]] <- metadata
p1 <- DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "cell_subtype", pt.size = 0.1, raster=FALSE, label = TRUE)
#DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "cell_type", pt.size = 0.1, raster=FALSE, label = TRUE)
p2 <- DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "seurat_clusters", pt.size = 0.1, raster=FALSE, label = TRUE)
p3 <- p1 + p2
 
sce
table(metadata$cell_type)
table(metadata$cell_subtype)
data = sce@reductions$umap.harmony@cell.embeddings %>% as.data.frame() %>% cbind(cell_type = sce@meta.data$cell_type)
sce$umap_1 <- data$umapharmony_1
sce$umap_2 <- data$umapharmony_2
metadata <- sce[[]]
write.csv(metadata,file = './data_r/Annotation_limit/sce_meta.csv')
 
dim(sce)
# 33686 X 128394

obj <- subset(sce, subset = cell_subtype != "NotAssigned")
obj <- FindNeighbors(obj, reduction = "harmony", dims = 1:30)
obj <- RunUMAP(obj, reduction = "harmony", dims = 1:30, reduction.name = "umap.harmony")
DimPlot(obj, reduction = "umap.harmony", cols = mycolor, group.by = "cell_subtype", pt.size = 0.1, raster=FALSE, label = TRUE)
#DimPlot(obj, reduction = "umap.harmony", cols = mycolor, group.by = "cell_type", pt.size = 0.1, raster=FALSE, label = TRUE)
dim(obj)
#33686 X 115379

metadata <- obj[[]]
table(metadata$cell_type)
table(metadata$cell_subtype)
obj
sce <- obj

p1 <- DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "seurat_clusters", pt.size = 0.1, raster=FALSE, label = TRUE)
p2 <- DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "cell_subtype", pt.size = 0.1, raster=FALSE, label = TRUE)
p3 <- p1 + p2
ggsave(p1,file=paste("./data_r/Annotation_limit/", "sce_umap_seurat_clusters.pdf",sep=""), width = 9, height = 6)
ggsave(p2,file=paste("./data_r/Annotation_limit/", "sce_umap_cell_subtype.pdf",sep=""), width = 10, height = 6)
ggsave(p3,file=paste("./data_r/Annotation_limit/", "sce_umap_seurat_clusters_subtype.pdf",sep=""), width = 16, height = 6)
 
p1 <- DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "cell_type", pt.size = 0.1, raster=FALSE, label = TRUE)
ggsave(p1,file=paste("./data_r/Annotation_limit/", "sce_umap_cell_type.pdf",sep=""), width = 8, height = 6)
 
p1 <- DimPlot(sce, reduction = "umap.harmony", cols = mycolor, group.by = "sample", pt.size = 0.1, raster=FALSE, label = FALSE)
ggsave(p1,file=paste("./data_r/Annotation_limit/", "sce_umap_sample.pdf",sep=""), width = 6, height = 4)

feats <- c("nFeature_RNA", "nCount_RNA", "mitoRatio" )
p1 <- VlnPlot(sce, group.by = "group", features = feats, pt.size = 0, ncol = 3, cols = mycolor, raster = FALSE) + NoLegend()
ggsave(p1,file=paste("./data_r/Annotation_limit/", "sce_QC_vln_group.pdf",sep=""), width = 7.5, height = 4)
p2 <- VlnPlot(sce, group.by = "sample", features = feats, pt.size = 0, ncol = 3, cols = mycolor, raster = FALSE) + NoLegend()
ggsave(p2,file=paste("./data_r/Annotation_limit/", "sce_QC_vln_sample.pdf",sep=""), width = 15, height = 4)
p1 <- VlnPlot(sce, group.by = "cell_type", features = feats, pt.size = 0, ncol = 3, cols = mycolor, raster = FALSE) + NoLegend()
ggsave(p1,file=paste("./data_r/Annotation_limit/", "sce_QC_vln_cell_type.pdf",sep=""), width = 7.5, height = 4)

library(reshape)

plotC <- table(sce@meta.data$sample, sce@meta.data$cell_subtype) %>% melt()
colnames(plotC) <- c("Sample", "Cell_subtype","Number")
plotC$Sample <- factor(plotC$Sample, 
levels=c(  'P02_LA_AF',   'P03_LA_AF',   'P04_LA_AF', 'P06_LA_AF',   'P07_LA_AF',   
'P09_LA_CTRL', 'P10_LA_CTRL',   'P11_LA_CTRL', 
'P04_RA_AF',   'P05_RA_AF',   'P13_RA_AF', 
'P10_RA_CTRL', 'P15_RA_CTRL', 'P16_RA_CTRL', 'P17_RA_CTRL'  ),ordered = TRUE)
write.csv(plotC,file = './data_r/Annotation_limit/sce_propotion_cell_subtype_sample.csv')

#colomplot
pC1 <- ggplot(data = plotC, aes(x = Cell_subtype, y = Number, fill = Sample )) +
geom_bar(stat = "identity", width=0.8,aes(group=Sample),position="stack")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Average number")+
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))

#ratioplot
pC2 <- ggplot(data = plotC, aes(x = Cell_subtype, y = Number, fill = Sample)) +
geom_bar(stat = "identity", width=0.8,aes(group=Sample),position="fill")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Cell proportion")+
scale_y_continuous(labels = percent)+ ####move y axi
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))#?????????45?

#bind two plot
pC <- pC1 / pC2 + plot_layout(ncol = 1,  guides = 'collect')
pC
#save plot
ggsave(pC,file="./data_r/Annotation_limit/sce_Propotion_Subtype_Sample.pdf",width = 15, height = 8)
 
celltype.markers <- c('GPAM', 'FASN', 'SLC19A3',
                   'NPPA', 'MYL7', 'RYR2', 'TTN',
                     'PCDH15', 'LEPR', 'MYRIP',
                   'VWF', 'PECAM1', 'CDH5', 
                   'PRG4', 'HAS1',
                   'WT1','KRT18', 
                   'DCN', 'PDGFRA', 'COL4A4',
                   'TBX1', 'PROX1', 
                   'CD163', 'SLC11A1',
                   'NRXN1', 'NRXN3', 'XKR4',
                   'EGFLAM', 'RGS5', 'ABCC9', 
                   'MYH11', 'TAGLN', 'ACTA2',
                   'PTPRC', 'IL7R', 'CD247')
celltype.markers <- unique(celltype.markers)
col1 <- colorRampPalette(brewer.pal(11,"RdYlBu"))(200)
sce_cell_type_markers_dot <- DotPlot(sce, features = celltype.markers, assay='RNA', group.by = "cell_type"  )+ RotatedAxis()+ #ggplot2:::coord_flip()+
           scale_color_gradientn(colors= rev(col1)) +
           theme(plot.title = element_text( size = 16, face = "bold"),
                 panel.grid.major = element_line(colour = "grey90",size=0.2),
                 panel.grid.minor = element_blank(),
                 panel.background = element_blank(), axis.line = element_line(colour = "black"),
                 axis.text.x=element_text(color = 'black', size=12),
                 axis.text.y=element_text(color = 'black', size=12) ) 
sce_cell_type_markers_dot
ggsave(plot=sce_cell_type_markers_dot, filename="./data_r/Annotation_limit/sce_cell_type_markers_dot_long.pdf",width = 11, height = 4)

celltype.markers <- c('GPAM', 'FASN', 'LEP', 'SLC19A3',
                   'NPPA', 'MYL7', 'MYL4', 'RYR2', 'TTN', 'CNNT2','MYBPC3', 
                   'VWF', 'PECAM1', 'CDH5', 
                   'NRG1', 'NRG3', 'PCDH15', 'LEPR', 'MYRIP',
                   'WWC1', 'PRG4', 'HAS1', 'TWIST2',
                   'KRT18', 
                   'MSLN', 'WT1', 'BNC1',
                   'DCN', 'GSN', 'PDGFRA', 'COL4A4',
                   'TBX1',  'PROX1',
                   'CD163', 'SLC11A1',
                   'NRXN1', 'NRXN3', 'XKR4',
                   'EGFLAM', 'RGS5', 'ABCC9', 
                   'MYH11', 'TAGLN', 'ACTA2',
                   'PTPRC', 'IL7R', 'CD247', 
                   'TRDV2',
                    'CD226', 
                   'SEL1L3', 'TPD52',
                   'MKI67')
sce_cell_type_markers_dot <- DotPlot(sce, features = celltype.markers, assay='RNA', group.by = "cell_subtype"  )+ RotatedAxis()+ ggplot2:::coord_flip()+
           scale_color_gradientn(colors= rev(brewer.pal(n = 11, name = "RdYlBu"))) +
           theme(plot.title = element_text( size = 16, face = "bold"),
                 panel.grid.major = element_line(colour = "grey90",size=0.2),
                 panel.grid.minor = element_blank(),
                 panel.background = element_blank(), axis.line = element_line(colour = "black"),
                 axis.text.x=element_text(color = 'black', size=12),
                 axis.text.y=element_text(color = 'black', size=12) ) 
sce_cell_type_markers_dot
ggsave(plot=sce_cell_type_markers_dot, filename="./data_r/Annotation_limit/sce_cell_subtype_markers_dot.pdf",width = 11, height = 12)


#pie
p1 <- table(sce@meta.data$cell_type)
p1 <- as.data.frame(p1)
p1 <- p1[which(p1$Freq>0),]
p1$prop <- 100*p1$Freq/sum(p1$Freq)
p1$prop <- round(p1$prop, 2)
p1$type <- paste(p1$Var1,'(',p1$prop,'%)')
p2 <- ggplot(data = p1, aes(x = 1, 
                                y = prop)) +
  geom_col(color = "white", width = 1, aes(fill = type)) +
  theme(panel.grid.major = element_blank(), #????
        panel.grid.minor = element_blank(), #????
        panel.border = element_blank(), #??
        axis.title = element_blank(),  #???
        axis.text = element_blank(), # ??
        axis.ticks = element_blank(),
        panel.background = element_rect(fill = 'white'), #???
        plot.background=element_rect(fill="white"))+
  xlim(-0.5, 1.5) +
  scale_fill_manual(values = mycolor) +
  ggtitle('Total nucleus = 115,379') +
  theme(plot.title = element_text(hjust = 0.5)) +
  coord_polar(theta = "y") 
p2
ggsave(plot=p2, filename="./data_r/Annotation_limit/sce_pie_circle.pdf",width = 5.5, height = 4)
 


library(reshape)

plotC <- table(sce@meta.data$sample, sce@meta.data$cell_subtype) %>% melt()
colnames(plotC) <- c("Sample", "Cell_subtype","Number")
plotC$Sample <- factor(plotC$Sample, 
levels=c(  'P02_LA_AF',   'P03_LA_AF',   'P04_LA_AF', 'P06_LA_AF',   'P07_LA_AF',   
'P09_LA_CTRL', 'P10_LA_CTRL',   'P11_LA_CTRL', 
'P04_RA_AF',   'P05_RA_AF',   'P13_RA_AF', 
'P10_RA_CTRL', 'P15_RA_CTRL', 'P16_RA_CTRL', 'P17_RA_CTRL'  ),ordered = TRUE)
write.csv(plotC,file = './data_r/Annotation_limit/sce_propotion_cell_subtype_sample.csv')

#colomplot
pC1 <- ggplot(data = plotC, aes(x = Sample, y = Number, fill =  Cell_subtype)) +
geom_bar(stat = "identity", width=0.8,aes(group=Cell_subtype),position="stack")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Average number")+
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))

#ratioplot
pC2 <- ggplot(data = plotC, aes(x = Sample, y = Number, fill = Cell_subtype)) +
geom_bar(stat = "identity", width=0.8,aes(group=Cell_subtype),position="fill")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Cell proportion")+
scale_y_continuous(labels = percent)+ ####move y axi
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))#?????????45?

#bind two plot
pC <- pC1 / pC2 + plot_layout(ncol = 1,  guides = 'collect')
pC
#save plot
ggsave(pC,file="./data_r/Annotation_limit/sce_Propotion_Sample_subtype.pdf",width = 15, height = 8)




plotC <- table(sce@meta.data$sample, sce@meta.data$cell_type) %>% melt()
colnames(plotC) <- c("Sample", "Cell_Type","Number")
plotC$Sample <- factor(plotC$Sample, 
levels=c(  'P02_LA_AF',   'P03_LA_AF',   'P04_LA_AF', 'P06_LA_AF',   'P07_LA_AF',   
'P09_LA_CTRL', 'P10_LA_CTRL',   'P11_LA_CTRL', 
'P04_RA_AF',   'P05_RA_AF',   'P13_RA_AF', 
'P10_RA_CTRL', 'P15_RA_CTRL', 'P16_RA_CTRL', 'P17_RA_CTRL'  ),ordered = TRUE)
write.csv(plotC,file = './data_r/Annotation_limit/sce_propotion_cell_type_sample.csv')

#colomplot
pC1 <- ggplot(data = plotC, aes(x = Sample, y = Number, fill = Cell_Type)) +
geom_bar(stat = "identity", width=0.8,aes(group=Cell_Type),position="stack")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Average number")+
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))

#ratioplot
pC2 <- ggplot(data = plotC, aes(x = Sample, y = Number, fill = Cell_Type)) +
geom_bar(stat = "identity", width=0.8,aes(group=Cell_Type),position="fill")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Cell proportion")+
scale_y_continuous(labels = percent)+ ####move y axi
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))#?????????45?

#bind two plot
pC <- pC1 / pC2 + plot_layout(ncol = 1,  guides = 'collect')
pC
#save plot
ggsave(pC,file="./data_r/Annotation_limit/sce_Propotion_Sample.pdf",width = 7.5, height = 6)



plotC <- table(sce@meta.data$group, sce@meta.data$cell_type) %>% melt()
colnames(plotC) <- c("Group", "Cell_Type","Number")
plotC$Group <- factor(plotC$Group, levels=c('AF_LA', 'Ctrl_LA', 'AF_RA', 'Ctrl_RA'),ordered = TRUE)
write.csv(plotC,file = './data_r/Annotation_limit/sce_propotion_cell_type_group.csv')

#colomplot
pC1 <- ggplot(data = plotC, aes(x = Group, y = Number, fill = Cell_Type)) +
geom_bar(stat = "identity", width=0.8,aes(group=Cell_Type),position="stack")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Average number")+
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))

#ratioplot
pC2 <- ggplot(data = plotC, aes(x = Group, y = Number, fill = Cell_Type)) +
geom_bar(stat = "identity", width=0.8,aes(group=Cell_Type),position="fill")+
scale_fill_manual(values=mycolor) +
theme_bw()+
theme(panel.grid =element_blank()) +
labs(x="",y="Cell proportion")+
scale_y_continuous(labels = percent)+ ####move y axi
theme(axis.text = element_text(size=12, colour = "black"))+
theme(axis.title.y = element_text(size=12, colour = "black"))+
theme(panel.border = element_rect(size = 1, linetype = "solid", colour = "black"))+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8, vjust = 0.6))#?????????45?

#bind two plot
pC <- pC1 + pC2 + plot_layout(ncol = 2, widths = c(1,1),guides = 'collect')
pC
#save plot
ggsave(pC,file="./data_r/Annotation_limit/sce_Propotion_Group.pdf",width = 5.5, height = 4)
 

Adipocyte <- c('GPAM', 'FASN', 'LEP', 'SLC19A3')
Cardiomyocyte <- c('NPPA', 'MYL7', 'MYL4','TTN', 'RYR2','MYBPC3')
Endcardial <- c('NRG1', 'NRG3', 'PCDH15', 'LEPR', 'MYRIP')
Endothelial <- c('VWF', 'PECAM1', 'CDH5') 
Epicardial <- c('WWC1', 'PRG4', 'EPCAM', 'HAS1', 'TWIST2','MSLN', 'WT1', 'BNC1', 'KRT18')
Fibroblast <- c('DCN', 'GSN', 'PDGFRA', 'COL4A4')
lym_EC <- c('NRG3', 'PECAM1', 'TBX1', 'PROX1')
Macrophage <- c('PTPRC', 'CD14', 'C1QA', 'CD68', 'CD163', 'SLC11A1')
Neuronal <- c('PLP1', 'NRXN1', 'NRXN3', 'XKR4')
Pericyte <- c('RGS5', 'ABCC9', 'KCNJ8', 'EGFLAM')
SMC <- c('MYH11', 'TAGLN', 'ACTA2')
T_cell <- c('PTPRC', 'CD8A', 'IL7R', 'CD40LG', 'CD247', 'CD226')
 
celltype.marker.list <- list(Adipocyte=Adipocyte, Cardiomyocyte=Cardiomyocyte, Endcardial=Endcardial, 
                                        Endothelial=Endothelial, Epicardial=Epicardial, Fibroblast=Fibroblast, 
                                        lym_EC=lym_EC, Macrophage=Macrophage, Neuronal=Neuronal, 
                                        Pericyte=Pericyte, SMC=SMC, T_cell=T_cell)


plot.list <- list()
for (i in seq_along(celltype.marker.list)) {    
     current_list <- names(celltype.marker.list)[i]     
     current_data <- celltype.marker.list[[current_list]]
 
     sample <- sce
     DefaultAssay(sample) <- "RNA"
     expdata <- GetAssayData(sample)

     Pop1 <- current_data
     pops<-list(Pop1) 
     z_scores<-NULL
          for (j in 1:length(pops)) {
          genes <- pops[[j]]
          zz <- which(tolower(rownames(expdata)) %in% tolower(genes))
          av <- numeric(ncol(expdata))
          geneExp <- as.matrix(expdata[zz, ])
          geneExp <- t(scale(t(geneExp)))
          geneExp[is.nan(geneExp)] <- 0
          z_scores <- rbind(z_scores,(av + colSums(geneExp) / length(zz)))
          }
     t <- paste(current_list, '_marker_z', sep='')
     sample[[t]] <-z_scores[1,] 
     subtitle_str <- paste(current_data, collapse = ", ")
     p1 <- FeaturePlot(object = sample, features = t, reduction = 'umap.harmony', order = F, pt.size = 0.01, raster =FALSE)+
     scale_color_gradientn(colors=paletteContinuous("solarExtra"), oob=scales::squish, limits=c(0,1))+
     #ggtitle(current_list) + 
     labs(title = current_list, subtitle = subtitle_str) +
     theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) + guides          (color=F) 
     ggsave(p1,file=paste('./data_r/Annotation_limit/Z_sce_', current_list, '.pdf'),width = 4, height = 4)
     ggsave(p1, file = paste0('./data_r/Annotation_limit/Z_sce_', current_list, '.png'), width = 4, height = 4, dpi = 300)
     plot.list[[current_list]] <- p1
}

 
for (i in seq_along(celltype.marker.list)) {    
     current_list <- names(celltype.marker.list)[i]     
     current_data <- celltype.marker.list[[current_list]]
     obj <- sce
     p1 <- Plot_Density_Joint_Only(seurat_object=obj,features=current_data, reduction = 'umap.harmony', custom_palette=BlueAndRed(), pt.size = 0.01 )
     ggsave(p1,file=paste('./data_r/Annotation_limit/density_feature_sce_', current_list, '.pdf'),width = 5, height = 4)
}



obj <- sce
obj[["RNA"]]$'scale.data' <- NULL
saveRDS(obj, file = "./data_r/Annotation_limit/sce_annotation.RDS")
#sce <- readRDS("./data_r/Annotation_limit/sce_annotation.RDS")


Idents(sce) <- sce@meta.data$cell_type
#cell chat
sce$samples <- sce$sample
sce_list <- SplitObject(sce, split.by = "group")
library(uwot)
#BiocManager::install("CellChat")
library(CellChat)
CellChatDB <- CellChatDB.human


KS_cellchat <- function(x){
             data.input <- GetAssayData(x, assay = "RNA", layer = "data")
             meta <- x[[]]
             cell.use = rownames(meta)
             identity <- subset(x@meta.data, select = "cell_type")
             res <- createCellChat(object = data.input, meta = meta,  group.by = "cell_type")
             resDB.use <- subsetDB(CellChatDB, search = "Secreted Signaling", key = 'annotation')
             res@DB <- resDB.use
             res <- subsetData(res)
             future::plan("multisession", workers = 4)
             res <- identifyOverExpressedGenes(res)
             res <- identifyOverExpressedInteractions(res)
             res <- smoothData(res, adj = PPI.human)
             res <- computeCommunProb(res, raw.use = TRUE)
             res <- filterCommunication(res, min.cells = 10)
             res <- computeCommunProbPathway(res)
             res <- aggregateNet(res)
             res  <- netAnalysis_computeCentrality(res, slot.name = "netP")
             res <- computeNetSimilarity(res, type = "functional")
             res <- netEmbedding(res, umap.method = 'uwot', type = "functional")
             res <- netClustering(res, type = "functional",do.parallel = FALSE)
             res <- computeNetSimilarity(res, type = "structural")
             res <- netEmbedding(res, umap.method = 'uwot', type = "structural")
             res <- netClustering(res, type = "structural",do.parallel = FALSE)
             return(res)
}
options(future.globals.maxSize = 1000*1024^6)

cellchat_list <- list()
for (i in seq_along(sce_list)) {    
     data_name <- names(sce_list)[i]     
     data <- sce_list[[data_name]]
     cellchat_res <- KS_cellchat(data)
     saveRDS(cellchat_res, file = paste("./data_r/Annotation_limit/sce_type_", data_name, ".rds",sep=""))
}

sce.list <-SplitObject(sce, split.by = "cell_type")
for (i in seq_along(sce.list)) {    
     current_list <- names(sce.list)[i]     
     current_data <- sce.list[[current_list]]    

     seq <- seq(0, 1, by = 0.1)
     for(res in seq){
       current_data <- FindClusters(object = current_data,method = "igraph",resolution = res)
     }
     sce_clustree <- clustree(current_data, prefix = 'RNA_snn_res.') + coord_flip()
     ggsave(sce_clustree,file=paste("./data_r/Annotation_limit/sce_clustree_", current_list, ".pdf",sep=""),width = 15, height = 10)
     saveRDS(current_data, file = paste("./data_r/Sce_obj/", current_list, ".RDS",sep=""))
     #sce.list[[current_list]]    <- current_data
 }



obj_Adip <- readRDS("./data_r/obj_Adip.RDS")
obj_cm <- readRDS("./data_r/obj_cm.RDS")
obj_ec <- readRDS("./data_r/obj_ec.RDS")
obj_Endo <- readRDS("./data_r/obj_Endo.RDS")
obj_Epi <- readRDS("./data_r/obj_Epi.RDS")
obj_fib <- readRDS("./data_r/obj_fib.RDS")
obj_Mac <- readRDS("./data_r/obj_Mac.RDS")
obj_Tcell <- readRDS("./data_r/obj_Tcell.RDS")

obj.list <- sce.list
obj.list$Adipocyte <- obj_Adip
obj.list$Cardiomyocyte <- obj_cm
obj.list$Endocardial <- obj_Endo
obj.list$Endothelial <- obj_ec
obj.list$Epicardial <- obj_Epi
obj.list$Fibroblast <- obj_fib
obj.list$Macrophage <- obj_Mac
obj.list$T_cell <- obj_Tcell
length(obj.list)

for (i in seq_along(obj.list)) {    
     current_list <- names(obj.list)[i]     
     current_data <- obj.list[[current_list]]   
     current_data[["RNA"]]$'data' <- NULL
     current_data[["RNA"]]$'scale.data' <- NULL
     obj.list[[current_list]] <- current_data
}

obj <-  merge(obj.list[[1]], obj.list[2: length(obj.list)])
obj 
paste("obj assay size:", format(object.size(obj[["RNA"]]), units = "Gb"))
meta.obj <- obj[[]]
sce <- readRDS("./data_r/Annotation_limit/sce_annotation.RDS")
paste("sce assay size:", format(object.size(sce[["RNA"]]), units = "Gb"))
meta.sce <- sce[[]]
sce[[]] <- meta.obj
metadata <- sce[[]]
     metadata$tissue <-  NA
     metadata$tissue[which(str_detect(metadata$sample, "LA_AF"))] <- "LA"
     metadata$tissue[which(str_detect(metadata$sample, "LA_CTRL"))] <- "LA"
     metadata$tissue[which(str_detect(metadata$sample, "RA_AF"))] <- "RA"
     metadata$tissue[which(str_detect(metadata$sample, "RA_CTRL"))] <- "RA"
     metadata$cluster[which(str_detect(metadata$cell_type, "T_cell"))] <- "T_cell"
     metadata$cluster[which(str_detect(metadata$cell_type, "Adipocyte"))] <- "Adipocyte"
sce[[]]<-metadata
saveRDS(sce, file = "./data_r/Annotation/sce.RDS")
metadata <- sce[[]]
write.csv(metadata,file = './data_r/Annotation/sce_meta.csv')




library(SeuratDisk)  
obj <- sce
obj[["RNA3"]] <- as(object = obj[["RNA"]], Class = "Assay")
DefaultAssay(obj) <- "RNA3"
obj[["RNA"]] <- NULL
obj <- RenameAssays(object = obj, RNA3 = 'RNA')
obj[["RNA"]]$scale.data <- NULL 
SaveH5Seurat(obj, filename = "./data_r/Annotation_limit/obj.h5Seurat")
Convert("./data_r/Annotation_limit/obj.h5Seurat", dest = "./data_r/Annotation_limit/obj.h5ad")



hca <- readRDS("/data/xinzangzhongxin/AF/All_Cells_of_the_adult_human_heart.rds")
#hca <- readRDS("D:/Work01/FFAR/All_Cells_of_the_adult_human_heart.RDS")
ids = mapIds(org.Hs.eg.db, keys =rownames(hca),   column = 'SYMBOL',keytype = 'ENSEMBL')
ids <- as.data.frame(ids)
ids$SYMBOL <-ids$ids
ids$ENSEMBL <- rownames(ids)
ids=na.omit(ids)
ids=ids[!duplicated(ids$SYMBOL),]
ids=ids[!duplicated(ids$ENSEMBL),]
pos=match(ids$ENSEMBL,rownames(hca) )
hca=hca[pos,]
#write a function
RenameGenesSeurat <- function(obj , 
                              newnames ) { 
  # Replace gene names in different slots of a Seurat object. Run this before integration. Run this before integration. 
  # It only changes obj@assays$RNA@counts, @data and @scale.data.
  print("Run this before integration. It only changes obj@assays$RNA@counts, @data and @scale.data.")
  RNA <- obj@assays$RNA
  if (nrow(RNA) == length(newnames)) {
    if (length(RNA@counts)) RNA@counts@Dimnames[[1]]            <- newnames
    if (length(RNA@data)) RNA@data@Dimnames[[1]]                <- newnames
    if (length(RNA@scale.data)) RNA@scale.data@Dimnames[[1]]    <- newnames
  } else {"Unequal gene sets: nrow(RNA) != nrow(newnames)"}
  obj@assays$RNA <- RNA
  return(obj)
}
obj=RenameGenesSeurat(obj = hca, 
                  newnames = ids$SYMBOL)
hca <-obj
head(rownames(hca))

haf <- sce
 
av_haf <- AggregateExpression(haf, group.by = "cell_type", assays = "RNA")
av_haf <- av_haf[[1]]
cg_haf = names(tail(sort(apply(av_haf,1,sd)),2000))
av_haf <-as.data.frame(av_haf)
my_col<-colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))
corplot_haf <- pheatmap::pheatmap(cor(av_haf[cg_haf,],av_haf[cg_haf,], method = 'spearman'), border_color = 'white', col=my_col(200))
corplot_haf <- ggplotify::as.ggplot(corplot_haf) + ggtitle('corplot of haf among cell_types')
ggsave(p1,file="./data_r/Annotation/corplot_haf.pdf",width = 5, height = 4)

av_haf <- AggregateExpression(haf, group.by = "sample", assays = "RNA")
av_haf <- av_haf[[1]]
cg_haf = names(tail(sort(apply(av_haf,1,sd)),2000))
av_haf <-as.data.frame(av_haf)
my_col<-colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))
corplot_haf <- pheatmap::pheatmap(cor(av_haf[cg_haf,],method = 'spearman'), border_color = 'white', col=my_col(200))
corplot_haf <- ggplotify::as.ggplot(corplot_haf) + ggtitle('corplot of haf among samples')
ggsave(corplot_haf,file="./data_r/Annotation/corplot_haf_sample.pdf",width = 7.5, height = 6)

av_hca <- AggregateExpression(hca, group.by = "cell_type_original", assays = "RNA")
av_hca <- av_hca[[1]]
av_hca <-as.data.frame(av_hca)
av_hca$gene <- rownames(av_hca)
av_haf <- AggregateExpression(haf, group.by = "cell_type", assays = "RNA")
av_haf <- av_haf[[1]]
av_haf <-as.data.frame(av_haf)
av_haf$gene <- rownames(av_haf)
hca_haf <- merge(av_hca,av_haf, by = "gene")
rownames(hca_haf) <- hca_haf$gene
gene <- rownames(hca_haf)
av_hca <- select(av_hca, -14)
av_hca <- select(av_hca, -9)
av_hca <- select(av_hca, -12)

vec <- c( "Adipocyte", "Cardiomyocyte", "Endocardial", "Endothelial", 'Lym-EC', 'Epicardial',            
"Fibroblast", "Pericyte", "SMC", "T-cell",  'Dendritic-cell', 'Macrophage', 'Neuronal')
av_haf <- av_haf[, vec]

vec <- c( "Adipocytes", "Atrial-Cardiomyocyte", "Ventricular-Cardiomyocyte", "Endothelial", "Mesothelial",          
"Fibroblast",  "Pericytes", "Smooth-muscle-cells",  "Lymphoid", "Myeloid",
"Neuronal" )
av_hca <- av_hca[, vec]

#av_haf <- select(av_haf, -14)
my_col<-colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))
corplot_haf_hca <- pheatmap::pheatmap(cor(av_haf[gene,],av_hca[gene,],method = 'spearman'), cluster_rows = F, cluster_cols = F, border_color = 'white', col=my_col(200))
require(ggplotify)
corplot_haf_hca = as.ggplot(corplot_haf_hca)
corplot_haf_hca <- ggplotify::as.ggplot(corplot_haf_hca) + ggtitle('Comparison with human normal heart atlas')
ggsave(corplot_haf_hca,file="./data_r/Annotation/corplot_haf_hca.pdf",width = 5, height = 4)

sma <- readRDS("/data/xinzangzhongxin/AF/All_snRNA_MI.rds")
#sma <- readRDS("E:/Work01/HMI/sma.RDS")
head(rownames(sma))
ids = mapIds(org.Hs.eg.db, keys =rownames(sma),   column = 'SYMBOL',keytype = 'ENSEMBL')
ids <- as.data.frame(ids)
ids$SYMBOL <-ids$ids
ids$ENSEMBL <- rownames(ids)
ids=na.omit(ids)
ids=ids[!duplicated(ids$SYMBOL),]
ids=ids[!duplicated(ids$ENSEMBL),]
pos=match(ids$ENSEMBL,rownames(sma) )
sma=sma[pos,]

#write a function
RenameGenesSeurat <- function(obj , 
                              newnames ) { 
  # Replace gene names in different slots of a Seurat object. Run this before integration. Run this before integration. 
  # It only changes obj@assays$RNA@counts, @data and @scale.data.
  print("Run this before integration. It only changes obj@assays$RNA@counts, @data and @scale.data.")
  RNA <- obj@assays$RNA
  if (nrow(RNA) == length(newnames)) {
    if (length(RNA@counts)) RNA@counts@Dimnames[[1]]            <- newnames
    if (length(RNA@data)) RNA@data@Dimnames[[1]]                <- newnames
    if (length(RNA@scale.data)) RNA@scale.data@Dimnames[[1]]    <- newnames
  } else {"Unequal gene sets: nrow(RNA) != nrow(newnames)"}
  obj@assays$RNA <- RNA
  return(obj)
}
obj=RenameGenesSeurat(obj = sma, 
                  newnames = ids$SYMBOL)
sma <-obj
head(rownames(sma))

av_sma <- AggregateExpression(sma, group.by = "cell_type_original", assays = "RNA")
av_sma <- av_sma[[1]]
av_sma <-as.data.frame(av_sma)
av_sma$gene <- rownames(av_sma)
av_haf <- AggregateExpression(haf, group.by = "cell_type", assays = "RNA")
av_haf <- av_haf[[1]]
av_haf <-as.data.frame(av_haf)
av_haf$gene <- rownames(av_haf)
haf_sma <- merge(av_haf, av_sma,by = "gene")
gene <-  haf_sma$gene
av_sma <- select(av_sma, -12)

vec <- c( "Adipocyte", "Cardiomyocyte", "Endocardial", "Endothelial", 'Lym-EC',  'Epicardial',      
"Fibroblast",  "Pericyte", "SMC", "T-cell",  'Dendritic-cell', 'Macrophage', 'Neuronal')
av_haf <- av_haf[, vec]

vec <- c( "Adipocyte", "Cardiomyocyte", "Endothelial",         
"Fibroblast",  "Pericyte", "vSMCs",  "Lymphoid", "Myeloid", 'Cycling cells', 'Mast',
"Neuronal" )
av_sma <- av_sma[, vec]

my_col<-colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))
corplot_haf_sma <- pheatmap::pheatmap(cor(av_haf[gene,],av_sma[gene,],method = 'spearman'), cluster_rows = F, cluster_cols = F, border_color = 'white', col=my_col(200))
corplot_haf_sma <- ggplotify::as.ggplot(corplot_haf_sma) + ggtitle('Comparison with human MI LV snRNA-seq atlas')
ggsave(corplot_haf_sma,file="./data_r/Annotation/corplot_haf_sma.pdf",width = 5, height = 4)

af.mgh <- readRDS("/data/xinzangzhongxin/AF_MGH/data_r/sce.RDS")
#af.science <- readRDS("D:/Work01/AF/af_science.RDS")
sce <- af.mgh
sce <- NormalizeData(sce)
sce <- FindVariableFeatures(sce, selection.method = "vst", nfeatures = 3000)
sce <- ScaleData(sce)
sce <- RunPCA(sce)
ElbowPlot(sce)
sce <- RunUMAP(sce, dims = 1:20)
sce <- FindNeighbors(sce, dims = 1:20)
af.mgh <- sce

Idents(af.mgh) <- af.mgh@meta.data$cell_type
DimPlot(af.mgh, reduction = "umap", cols = mycolor,  pt.size = 0.1, raster=FALSE)
head(rownames(af.mgh))

saf <- af.mgh
av_saf <- AggregateExpression(saf, group.by = "cell_type", assays = "RNA")
av_saf <- av_saf[[1]]
av_saf <-as.data.frame(av_saf)
av_saf$gene <- rownames(av_saf)
av_haf <- AggregateExpression(haf, group.by = "cell_type", assays = "RNA")
av_haf <- av_haf[[1]]
av_haf <-as.data.frame(av_haf)
av_haf$gene <- rownames(av_haf)
haf_saf <- merge(av_haf, av_saf,by = "gene")
gene <-  haf_saf$gene
av_saf <- select(av_saf, -16)
av_haf <- select(av_haf, -14)

vec <- c( "Adipocyte", "Cardiomyocyte", "Endocardial", "Endothelial", 'Lym-EC',  'Epicardial',      
"Fibroblast",  "Pericyte", "SMC", "T-cell",  'Dendritic-cell', 'Macrophage', 'Neuronal')
av_haf <- av_haf[, vec]

vec <- c( "Adipocytes", "Cardiomyocytes", "Endothelial-1", "Endothelial-2",  'Lymphatic-Endothelial', 'Epicardial-Cells',          
"Fibroblasts",  "Pericytes", "Vascular-Smooth-Muscle",  "Lymphocytes", 'B-Cells', "Macrophages", 'Megakaryocytes', 'Mast-Cells',
'Neuronal')
av_saf <- av_saf[, vec]

my_col<-colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))
corplot_haf_saf <- pheatmap::pheatmap(cor(av_haf[gene,],av_saf[gene,],method = 'spearman'), cluster_rows = F, cluster_cols = F, border_color = 'white', col=my_col(200))
corplot_haf_saf <- ggplotify::as.ggplot(corplot_haf_saf) + ggtitle('Comparison with human AF LA snRNA-seq atlas')
ggsave(corplot_haf_saf,file="./data_r/Annotation/corplot_haf_saf.pdf",width = 5, height = 4)

haf
hca
sma
saf
table(haf[[]]$cell_type)
table(hca[[]]$cell_type_original)
table(sma[[]]$cell_type_original)
table(saf[[]]$cell_type)

 
metadata <- haf[[]]
#metadata$cell_type_original <- metadata$cell_type
table(metadata$cell_type_original)
metadata$cell_type[which(metadata$cell_type_original == 'Dendritic_cell' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Macrophage' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Endocardial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Lym_EC' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Epicardial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'T_cell' )] = 'Lymphoid'
table(metadata$cell_type)
haf[[]] <- metadata

metadata <- hca[[]]
table(metadata$cell_type_original)
metadata$cell_type <- NA
metadata$cell_type[which(metadata$cell_type_original == 'Adipocytes' )] = 'Adipocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Atrial_Cardiomyocyte' )] = 'Cardiomyocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Ventricular_Cardiomyocyte' )] = 'Cardiomyocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Endothelial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Fibroblast' )] = 'Fibroblast'
metadata$cell_type[which(metadata$cell_type_original == 'Lymphoid' )] = 'Lymphoid'
metadata$cell_type[which(metadata$cell_type_original == 'Mesothelial' )] = 'Mesothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Myeloid' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Neuronal' )] = 'Neuronal'
metadata$cell_type[which(metadata$cell_type_original == 'NotAssigned' )] = 'NotAssigned'
metadata$cell_type[which(metadata$cell_type_original == 'doublets' )] = 'doublets'
metadata$cell_type[which(metadata$cell_type_original == 'Pericytes' )] = 'Pericyte'
metadata$cell_type[which(metadata$cell_type_original == 'Smooth_muscle_cells' )] = 'SMC'
table(metadata$cell_type)
hca[[]] <- metadata


p1 <- table(haf@meta.data$cell_type)
p1 <- as.data.frame(p1)
p1 <- p1[which(p1$Freq>0),]
p1$prop <- 100*p1$Freq/sum(p1$Freq)
p1$prop <- round(p1$prop, 2)
p1 <- p1[order(p1$prop, decreasing = T),]
p1$type <- paste(p1$Var1,'(',p1$prop,'%)')
p1_haf <- p1
write.csv(p1_haf,file = './data_r/Annotation/Proportion_haf.csv')

p1 <- table(hca@meta.data$cell_type)
p1 <- as.data.frame(p1)
p1 <- p1[which(p1$Freq>0),]
p1$prop <- 100*p1$Freq/sum(p1$Freq)
p1$prop <- round(p1$prop, 2)
p1 <- p1[order(p1$prop, decreasing = T),]
p1$type <- paste(p1$Var1,'(',p1$prop,'%)')
p1_hca <- p1
write.csv(p1_hca,file = './data_r/Annotation/Proportion_hca.csv')

f <- function(x)
{
y <- x
d <- data.frame(x=x, y=y)
return(d)
}
x<-c(-20, 0, 20, 40, 60)
df<-f(x)

library(ggpmisc)
my.formula <- y ~ x
#p1_haf <- read.csv("./data_r/Annotation/Proportion_haf.csv")
#p1_hca <- read.csv("./data_r/Annotation/Proportion_hca.csv")
#p1_sma <- read.csv("./data_r/Annotation/Proportion_sma.csv")
#p1_saf <- read.csv("./data_r/Annotation/Proportion_saf.csv")

xy_hca_haf <- merge( p1_hca, p1_haf, by = 'Var1') 
scatter_hca_haf <- ggplot(xy_hca_haf, aes(prop.x, prop.y), color=Var1)+
  geom_point( ) +
  scale_color_manual(values = mycolor) +
  geom_label_repel(data = xy_hca_haf, aes(label = Var1), color = 'black', segment.color = 'black', segment.size = 0.5, size = 3, force = T, nudge_x = 2.5, nudge_y = 2.5)+
  xlab("Cell proportion of heart cell atlas") +
  ylab("Cell proportion of human AF atlas") + xlim(0,100) + ylim(0,100)+
  ggtitle("Comparison with human normal heart atlas")+ 
  theme(plot.title = element_text(hjust = 0.5),
             legend.position = 'none',
             panel.background = element_rect(fill = 'white'), #???
             plot.background=element_rect(fill="white"),
             axis.line.x=element_line(linetype=1,color="black",size=1),
             axis.line.y=element_line(linetype=1,color="black",size=1)
              ) +
geom_line(data = df, aes(x=x, y=y), color= 'black', size=0.8)+
stat_poly_eq(formula = my.formula, 
               aes(label = paste( 
                                 stat(rr.label),
                                 stat(p.value.label),
                                 sep = "~~~")), 
               parse = TRUE) 
scatter_hca_haf
ggsave(scatter_hca_haf,  filename = paste("./data_r/Annotation/scatter_hca_haf.pdf",sep=""), height = 5, width = 5)





table(haf[[]]$cell_type)
table(sma[[]]$cell_type_original)

 
metadata <- haf[[]]
#metadata$cell_type_original <- metadata$cell_type
table(metadata$cell_type_original)
metadata$cell_type[which(metadata$cell_type_original == 'Dendritic_cell' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Macrophage' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Endocardial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Lym_EC' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Epicardial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'T_cell' )] = 'Lymphoid'
table(metadata$cell_type)
haf[[]] <- metadata

metadata <- sma[[]]
table(metadata$cell_type_original)
metadata$cell_type <- NA
metadata$cell_type[which(metadata$cell_type_original == 'Adipocyte' )] = 'Adipocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Cardiomyocyte' )] = 'Cardiomyocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Cycling cells' )] = 'Cycling cells'
metadata$cell_type[which(metadata$cell_type_original == 'Endothelial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Fibroblast' )] = 'Fibroblast'
metadata$cell_type[which(metadata$cell_type_original == 'Lymphoid' )] = 'Lymphoid'
metadata$cell_type[which(metadata$cell_type_original == 'Mast' )] = 'Mast'
metadata$cell_type[which(metadata$cell_type_original == 'Myeloid' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Neuronal' )] = 'Neuronal'
metadata$cell_type[which(metadata$cell_type_original == 'Pericytes' )] = 'Pericyte'
metadata$cell_type[which(metadata$cell_type_original == 'vSMCs' )] = 'SMC'
table(metadata$cell_type)
sma[[]] <- metadata

p1 <- table(sma@meta.data$cell_type)
p1 <- as.data.frame(p1)
p1 <- p1[which(p1$Freq>0),]
p1$prop <- 100*p1$Freq/sum(p1$Freq)
p1$prop <- round(p1$prop, 2)
p1 <- p1[order(p1$prop, decreasing = T),]
p1$type <- paste(p1$Var1,'(',p1$prop,'%)')
p1_sma <- p1
write.csv(p1_sma,file = './data_r/Annotation/Proportion_sma.csv')

xy_sma_haf <- merge( p1_sma, p1_haf, by = 'Var1') 
scatter_sma_haf <- ggplot(xy_sma_haf, aes(prop.x, prop.y), color=Var1)+
  geom_point( ) +
  scale_color_manual(values = mycolor) +
  geom_label_repel(data = xy_sma_haf, aes(label = Var1), color = 'black', segment.color = 'black', segment.size = 0.5, size = 3, force = T, nudge_x = 2.5, nudge_y = 2.5)+
  xlab("Cell proportion of human MI atlas") +
  ylab("Cell proportion of human AF atlas") +  xlim(0,100) + ylim(0,100)+
  ggtitle("Comparison with human MI  LV snRNA-seq atlas")+ 
  theme(plot.title = element_text(hjust = 0.5),
             legend.position = 'none',
             panel.background = element_rect(fill = 'white'), #???
             plot.background=element_rect(fill="white"),
             axis.line.x=element_line(linetype=1,color="black",size=1),
             axis.line.y=element_line(linetype=1,color="black",size=1)
              ) +
geom_line(data = df, aes(x=x, y=y), color= 'black', size=0.8)+
stat_poly_eq(formula = my.formula, 
               aes(label = paste( 
                                 stat(rr.label),
                                 stat(p.value.label),
                                 sep = "~~~")), 
               parse = TRUE) 
scatter_sma_haf
ggsave(scatter_sma_haf,  filename = paste("./data_r/Annotation/scatter_sma_haf.pdf",sep=""), height = 5, width = 5)





metadata <- saf[[]]
metadata$cell_type_original <- metadata$cell_type
table(metadata$cell_type_original)
metadata$cell_type <- NA
metadata$cell_type[which(metadata$cell_type_original == 'Adipocytes' )] = 'Adipocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Cardiomyocytes' )] = 'Cardiomyocyte'
metadata$cell_type[which(metadata$cell_type_original == 'Cycling cells' )] = 'Cycling cells'
metadata$cell_type[which(metadata$cell_type_original == 'Endothelial_1' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Endothelial_2' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Epicardial_Cells' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Lymphatic_Endothelial' )] = 'Endothelial'
metadata$cell_type[which(metadata$cell_type_original == 'Fibroblasts' )] = 'Fibroblast'
metadata$cell_type[which(metadata$cell_type_original == 'B_Cells' )] = 'Lymphoid'
metadata$cell_type[which(metadata$cell_type_original == 'Lymphocytes' )] = 'Lymphoid'
metadata$cell_type[which(metadata$cell_type_original == 'Macrophages' )] = 'Myeloid'
metadata$cell_type[which(metadata$cell_type_original == 'Mast_Cells' )] = 'Mast_Cells'
metadata$cell_type[which(metadata$cell_type_original == 'Megakaryocytes' )] = 'Megakaryocytes'
metadata$cell_type[which(metadata$cell_type_original == 'Neuronal' )] = 'Neuronal'
metadata$cell_type[which(metadata$cell_type_original == 'Pericytes' )] = 'Pericyte'
metadata$cell_type[which(metadata$cell_type_original == 'Vascular_Smooth_Muscle' )] = 'SMC'
table(metadata$cell_type)
saf[[]] <- metadata

p1 <- table(saf@meta.data$cell_type)
p1 <- as.data.frame(p1)
p1 <- p1[which(p1$Freq>0),]
p1$prop <- 100*p1$Freq/sum(p1$Freq)
p1$prop <- round(p1$prop, 2)
p1 <- p1[order(p1$prop, decreasing = T),]
p1$type <- paste(p1$Var1,'(',p1$prop,'%)')
p1_saf <- p1
write.csv(p1_saf,file = './data_r/Annotation/Proportion_saf.csv')

xy_saf_haf <- merge( p1_saf, p1_haf, by = 'Var1') 
scatter_saf_haf <- ggplot(xy_saf_haf, aes(prop.x, prop.y), color=Var1)+
  geom_point( ) +
  scale_color_manual(values = mycolor) +
  geom_label_repel(data = xy_saf_haf, aes(label = Var1), color = 'black', segment.color = 'black', segment.size = 0.5, size = 3, force = T, nudge_x = 2.5, nudge_y = 2.5)+
  xlab("Cell proportion of LA AF single-nucleus atlas") +
  ylab("Cell proportion of human AF atlas") + xlim(0,100) + ylim(0,100)+
  ggtitle("Comparison with human AF LA snRNA-seq atlas")+ 
  theme(plot.title = element_text(hjust = 0.5),
             legend.position = 'none',
             panel.background = element_rect(fill = 'white'), #???
             plot.background=element_rect(fill="white"),
             axis.line.x=element_line(linetype=1,color="black",size=1),
             axis.line.y=element_line(linetype=1,color="black",size=1)
              ) +
geom_line(data = df, aes(x=x, y=y), color= 'black', size=0.8)+
stat_poly_eq(formula = my.formula, 
               aes(label = paste( 
                                 stat(rr.label),
                                 stat(p.value.label),
                                 sep = "~~~")), 
               parse = TRUE) 
scatter_saf_haf
ggsave(scatter_saf_haf,  filename = paste("./data_r/Annotation/scatter_saf_haf.pdf",sep=""), height = 5, width = 5)








conda activate base
python3

import scanpy as sc
import celltypist
from celltypist import models

sc.settings.verbosity = 3  # verbosity: errors (0), warnings (1), info (2), hints (3)
sc.logging.print_header()
sc.settings.set_figure_params(dpi=80, facecolor="white")

results_file = "/data/xinzangzhongxin/AF/data_r/Annotation_limit/obj_predicted.h5ad"  # the file that will store the analysis results

OutDir = '/data/xinzangzhongxin/AF/data_r/Annotation_limit/'
adata = sc.read_h5ad('/data/xinzangzhongxin/AF/data_r/Annotation_limit/obj.h5ad')

sc.pp.normalize_total(adata, target_sum=1e4)
sc.pp.log1p(adata)
adata.X.expm1().sum(axis = 1) 

models.models_path
models.models_description()

model = models.Model.load(model = 'Healthy_Adult_Heart.pkl')

model.cell_types

model.description

predictions = celltypist.annotate(adata, model = 'Healthy_Adult_Heart.pkl', majority_voting = True, p_thres = 0.5)

predictions.predicted_labels

adata = predictions.to_adata()

adata.write(results_file)

celltypist.dotplot(predictions, use_as_reference = 'cell_type', use_as_prediction = 'majority_voting')
celltypist.dotplot(predictions, use_as_reference = 'cell_subtype', use_as_prediction = 'majority_voting')


celltypist.dotplot(predictions, use_as_reference = 'cell_subtype', use_as_prediction = 'predicted_labels')
